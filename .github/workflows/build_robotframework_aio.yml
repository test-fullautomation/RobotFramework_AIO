name: Build RobotFramework AIO packages

on:
  push:
    tags:
      - "rel/aio/*.*.*.*"
      - "dev/aio/*.*.*.*"
  pull_request:
    types:
      - closed
    branches: 
      - develop
  workflow_dispatch:

env:
  GITHUB_PAT : ${{ secrets.PAT_GITHUB }} 
  TRIGGER_BY: ${{ github.ref_type }}
  TAG_NAME: ${{ github.ref_name }}
  REF_NAME: ${{ github.ref_name }}
  DEFAULT_REF: ${{ github.base_ref }}
  MAINDOC_CONFIGFILE: --configfile "./maindoc/maindoc_configs/maindoc_config_OSS.json"
  AIO_NAME: "RobotFramework AIO"
  BUNDLE_NAME: --bundle_name "RobotFramework AIO"
  GENDOC_PLANTUML_PATH: "../robotvscode/data/extensions/jebbs.plantuml-2.17.5"
  INSTALLER_LOCATION: "https://github.com/test-fullautomation/RobotFramework_AIO/releases"
jobs:
  tag-repos:
    name: Tag all related repositories
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Install dependencies
      run: python -m pip install -r ./tools/git-tag/requirements.txt

    - name: Tag repositories
      run: python ./tools/git-tag/git-tag.py "$TAG_NAME" ./config/repositories/tag_repos.json

  build-linux:
    name: Build Linux package
    runs-on: ubuntu-latest
    needs: tag-repos
    # if: always() && needs.tag-repos.result != 'failure' && needs.tag-repos.result != 'cancelled'
    if: ${{ ! failure() && ! cancelled() }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies and set environment variables
        run: |
          sudo apt-get update
          sudo apt-get install --fix-missing
          chmod +x ./requirements_linux.sh
          ./requirements_linux.sh
          echo "AIO_VERSION_DATE=$(date +%m.%Y)" >> $GITHUB_ENV
          echo "AIO_VERSION=${TAG_NAME#rel/aio/}" >> $GITHUB_ENV
          echo "BUNDLE_VERSION_DATE=--bundle_version_date \"$(date +%m.%Y)\"" >> $GITHUB_ENV
          echo "BUNDLE_VERSION=--bundle_version \"${TAG_NAME#rel/aio/}\"" >> $GITHUB_ENV

      - name: Clone repositories
        run: |
          chmod +x ./cloneall
          ./cloneall

      - name: Install
        run: |
          chmod +x ./install/install.sh
          ./install/install.sh

      - name: Build
        run: |
          chmod +x ./build
          ./build

      - name: Upload built package
        uses: actions/upload-artifact@v3
        with:
          name: linux-package
          path: output_lx/*.deb

  build-windows:
    name: Build Windows package
    runs-on: windows-latest
    needs: tag-repos
    if: ${{ ! failure() && ! cancelled() }}

    steps:
      - name: Support long path in git
        run: git config --system core.longpaths true

      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies and set environment variables
        shell: bash
        run: |
          . ./requirements_windows.sh
          echo "GENDOC_LATEXPATH=$GENDOC_LATEXPATH" >> $GITHUB_ENV
          echo "AIO_VERSION_DATE=$(date +%m.%Y)" >> $GITHUB_ENV
          echo "AIO_VERSION=${TAG_NAME#rel/aio/}" >> $GITHUB_ENV
          echo "BUNDLE_VERSION_DATE=--bundle_version_date \"$(date +%m.%Y)\"" >> $GITHUB_ENV
          echo "BUNDLE_VERSION=--bundle_version \"${TAG_NAME#rel/aio/}\"" >> $GITHUB_ENV

      - name: Clone repositories
        shell: bash
        run: ./cloneall

      - name: Install
        shell: bash
        run: ./install/install.sh

      - name: Build
        shell: bash
        run: ./build

      - name: Upload built package
        uses: actions/upload-artifact@v3
        with:
          name: windows-package
          path: Output/

  install-test-windows:
    name: Test Windows package
    runs-on: windows-latest
    needs: build-windows
    if: ${{ ! failure() && ! cancelled() }}
    env:
      RobotPythonPath: "C:/Program Files/RobotFramework/python39"
      RobotTutorialPath: "C:/RobotTest/tutorial"
      GENDOC_PLANTUML_PATH: "C:/Program Files/RobotFramework/robotvscode/data/extensions/jebbs.plantuml-2.17.5"

    steps:
    - name: Support long path in git
      run: git config --system core.longpaths true

    - name: Checkout source
      uses: actions/checkout@v3

    - name: Clone repositories
      shell: bash
      run: ./cloneall

    - name: Download Windows installer package
      uses: actions/download-artifact@v3
      with:
        name: windows-package

    - name: Install RobotFramework AIO on Windows
      shell: cmd
      run: ./scripts/install-windows.bat

    - name: Run tests on Windows
      shell: cmd
      run: |
        set Robot
        "%RobotPythonPath%/python" test/aio-test-trigger/aio-test-trigger.py | tee console_log.txt

    - name: Upload test result as artifact
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: windows-aiotestlogfiles
        # long path issue on Windows when upload artifact 
        # https://github.com/actions/upload-artifact/issues/240
        path: |
          ${{ runner.workspace }}/[Rr]obotframework*/**/*/aiotestlogfiles/*
          ${{ runner.workspace }}/[Pp]ython*/**/*/aiotestlogfiles/*
          ${{ runner.workspace }}/[Rr]obotframework*/**/*/testlogfiles/*
          ${{ runner.workspace }}/[Pp]ython*/**/*/testlogfiles/*
          ${{ runner.workspace }}/**/*/console_log.txt

  install-test-linux:
    name: Test Linux package
    runs-on: ubuntu-latest
    needs: build-linux
    if: ${{ ! failure() && ! cancelled() }}

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Clone repositories
      run: |
        chmod +x ./cloneall
        ./cloneall

    - name: Download Linux installer package
      uses: actions/download-artifact@v3
      with:
        name: linux-package

    - name: Install on Linux
      run: |
        sudo apt-get update
        sudo apt-get install ./*.deb --fix-missing

    - name: Run tests on Linux
      run: |
        . /opt/rfwaio/linux/set_robotenv.sh
        $RobotPythonPath/python3.9 test/aio-test-trigger/aio-test-trigger.py | tee console_log.txt

    - name: Upload test result as artifact
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: linux-aiotestlogfiles
        path: |
          ${{ runner.workspace }}/**/*/aiotestlogfiles/*
          ${{ runner.workspace }}/**/*/testlogfiles/*
          ${{ runner.workspace }}/**/*/console_log.txt


  release:
    name: Release AIO
    runs-on: ubuntu-latest
    needs: [install-test-windows, install-test-linux]
    if: ${{ ! failure() && ! cancelled() && github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/rel/aio/') }}

    steps:
    - name: Download artifact from build workflow
      uses: actions/download-artifact@v3

    - name: Get released file names
      run: |
        echo "EXE_FILE=$(ls windows-package/*.exe | head -1)" >> $GITHUB_ENV
        echo "DEB_FILE=$(ls linux-package/*.deb | head -1)" >> $GITHUB_ENV
        echo "RELEASE_VERSION=${TAG_NAME#rel/aio/}" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: RobotFramework AIO version ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.EXE_FILE }}
        asset_name: setup_RobotFramework_AIO_Win_${{ env.RELEASE_VERSION }}.exe
        asset_content_type: application/octet-stream

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.DEB_FILE }}
        asset_name: setup_RobotFramework_AIO_Linux_${{ env.RELEASE_VERSION }}.deb
        asset_content_type: application/vnd.debian.binary-package

  tag-to-publish-packges-to-pypi:
    name: Tag Python packages to trigger workflow for publishing to PyPI
    runs-on: ubuntu-latest
    needs: [install-test-windows, install-test-linux]
    if: ${{ ! failure() && ! cancelled() && github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/rel/aio/') }}

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Install dependencies
      run: python -m pip install -r ./tools/git-tag/requirements.txt

    - name: Tag repositories
      run: |
        chmod +x ./tools/git-tag/tag_repos_with_their_version_file.sh
        ./tools/git-tag/tag_repos_with_their_version_file.sh ./config/repositories/publish_pypi_repos.txt
